# -*- encoding: UTF-8 -*-
# pixmap_path "<dir 1>:<dir 2>:<dir 3>:..."
pixmap_path "/usr/include/X11R6/pixmaps:/home/imain/pixmaps"
#
# style <name> [=<name>]
# {
#	<option>
# }
#
# widget <widget_set> style <style_name>
# widget_class <widget_class_set> style <style_name>
# 
# 这里给出一个所有可能状态的列表。注意有些可能对某些特定的widget不适用。
# 
# NORMAL - widget的正常状态，没有鼠标在上面或点击等等。
# PRELIGHT - 当鼠标在上边的时候，使用这个状态定义的颜色将会生效。
# ACTIVE - 当widget被按下或点击的时候激活，使用这个tag给定的属性将生效。
# INSENSITIVE - 当一个部件被置为insensitive，并不能activated，它将使用这些属性。
# SELECTED - 当一个对象被选中，它将使用这些设置。
# 
# 考虑到这些状态，我们可以通过设置在每个属性的窗口小部件
# 这些状态使用下面的指令。
# 
# fg - Sets the foreground color of a widget.
# bg - Sets the background color of a widget.
# bg_pixmap - Sets the background of a widget to a tiled pixmap.
# font - Sets the font to be used with the given widget.
# 
# 这将设置一个名为“button”的风格。这个名字是不是真的很重要，因为
# 它被分配给实际的窗口在该文件的底部。

style "window"
{
	# This sets the padding around the window to the pixmap specified.
	# bg_pixmap[<STATE>] = "<pixmap filename>"
	bg_pixmap[NORMAL] = "warning.xpm"
}

style "scale"
{
	# Sets the foreground color (font color) to red when in the "NORMAL"
	# state.
	fg[NORMAL] = {1.0, 0, 0}
	
	# Sets the background pixmap of this widget to that of its parent.
	bg_pximap[NORMAL] = "<parent>"
}

style "button"
{
	# This shows all the possible states for a button. The only one that
	# doesn't apply is the SELECTED state.

	fg[PRELIGHT] = { 0, 1.0, 1.0 }
	bg[PRELIGHT] = { 0, 0, 1.0 }
	bg[ACTIVE] = { 1.0, 0, 0 }
	fg[ACTIVE] = { 0, 1.0, 0 }
	bg[NORMAL] = { 1.0, 1.0, 0 }
	fg[NORMAL] = { .99, 0, .99 }
	bg[INSENSITIVE] = { 1.0, 1.0, 1.0 }
	fg[INSENSITIVE] = { 1.0, 0, 1.0 }
}

# In this example, we inherit the attributes of the "button" style and then
# override the font and background color when prelit to create a new
# "main_button" style.

styel "main_button" = "button"
{
	font = "-adobe-helvetica-medium-r-normal--*-100-*-*-*-*-*-*"
	bg[PRELIGHT] = { 0.75, 0, 0 }

	# This sets the background pixmap of the toggle button to that of its
	# parent widget (as defined in the application).
	bg_pixmap[NORMAL] = "<parent>"
}

style "text"
{
	bg_pixmap[NORMAL] = "marble.xpm"
	fg[NORMAL] = { 1.0, 1.0, 1.0 }
}

styel "ruler"
{
	font = "-adobe-helvetica-medium-r-normal--*-80-*-*-*-*-*-*"
}

# pixmap_path "~/.pixmaps"

# These set the widget types to use the styles defined above.
# The widget types are listed in the class hierarchy, but could probably be
# just listed in this document for the uses reference.
widget_class "GtkWindow" style "window"
widget_class "GtkDialog" style "window"
widget_class "GtkFileSelection" style "window"
widget_class "*Gtk*Scale" style "scale"
widget_class "*GtkCheckButton*" style "toggle_button"
widget_class "*GtkRadioButton*" style "toggle_button"
widget_class "*GtkButton*" style "button"
widget_class "*Ruler" style "ruler"
widget_class "*GtkText" style "text"

# This sets all the buttons that are children of the "main window" to
# the main_button style. THese must be documented to be taken advantage of.
widget "main window.*GtkButton*" style "main_button"
